# .github/workflows/update-version.yml

name: Update Version References

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update to (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  update-docs:
    name: Update Documentation Version References
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${{ github.event.release.tag_name }}"
          VERSION=${VERSION#v}  # Remove 'v' prefix if present
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT

    - name: Update README badges
      run: |
        VERSION="${{ steps.version.outputs.version }}"

        # Update PyPI version badge
        sed -i "s|badge\.fury\.io/py/path-comment-hook\.svg|badge.fury.io/py/path-comment-hook.svg|g" README.md

        # Update pre-commit example version
        sed -i "s|rev: v[0-9]*\.[0-9]*\.[0-9]*|rev: v${VERSION}|g" README.md

        # Update installation examples
        sed -i "s|path-comment-hook==[0-9]*\.[0-9]*\.[0-9]*|path-comment-hook==${VERSION}|g" README.md

    - name: Update documentation
      run: |
        VERSION="${{ steps.version.outputs.version }}"

        # Update version in all docs
        find docs/ -name "*.md" -type f -exec sed -i "s|rev: v[0-9]*\.[0-9]*\.[0-9]*|rev: v${VERSION}|g" {} \;
        find docs/ -name "*.md" -type f -exec sed -i "s|path-comment-hook==[0-9]*\.[0-9]*\.[0-9]*|path-comment-hook==${VERSION}|g" {} \;

    - name: Update pyproject.toml version
      run: |
        VERSION="${{ steps.version.outputs.version }}"
        sed -i "s|^version = .*|version = \"${VERSION}\"|" pyproject.toml

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "docs: update version references to ${{ steps.version.outputs.version }}"
        title: "üìù Update version references to ${{ steps.version.outputs.version }}"
        body: |
          ## üîÑ Automated Version Update

          This PR updates all version references in documentation and configuration files to `${{ steps.version.outputs.version }}`.

          ### Changes Made:
          - ‚úÖ Updated README.md examples and badges
          - ‚úÖ Updated documentation files
          - ‚úÖ Updated pyproject.toml version

          ### Files Modified:
          - `README.md`
          - `docs/**/*.md`
          - `pyproject.toml`

          This is an automated update triggered by the release of version `${{ steps.version.outputs.version }}`.
        branch: update-version-${{ steps.version.outputs.version }}
        delete-branch: true
